/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT   0
#define LOWER      1
#define RAISE     2
#define BOTH       3

/ {

        conditional_layers {
          compatible = "zmk,conditional-layers";
          both_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <BOTH>;
          };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                  bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |     Q     |     W     |     E     |     R     |     T     |     |     Y     |     U     |     I     |     O     |     P     |
      &kp Q       &kp W       &kp E       &kp R       &kp T             &kp Y       &kp U       &kp I       &kp O       &kp P

//  |     A     |     S     |     D     |     F     |     G     |     |     H     |     J     |     K     |     L     |     ;     |
      &kp A       &kp S       &kp D       &kp F       &kp G             &kp H       &kp J       &kp K       &kp L       &kp SEMI

//  |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |     ,     |     .     |     /     |
      &kp Z       &kp X       &kp C       &kp V       &kp B             &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH

//                          |  ALT/ESC  | LEFT/BKSP | CTRL/SPC  |     | SHIFT/ENT| RIGHT/TAB |  CMD/DEL  |
                          &mt LALT ESC &lt LEFT BSPC &mt LCTRL SPACE     &mt RSHFT RET &lt RIGHT TAB &mt RGUI DEL
                  >;
                };

                lower_layer {
                  bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |     1     |     2     |     3     |     4     |     5     |     |     6     |     7     |     8     |     9     |     0     |
      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5            &kp N6      &kp N7      &kp N8      &kp N9      &kp N0

//  |     A     |     S     |     D     |     F     |     G     |     |     -/_   |     =/+   |     [/{   |     ]/}   |     '/"   |
      &trans  &trans  &trans  &trans  &trans              &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp SQT

//  |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |     ,     |     `/~   |     \/"|" |
      &trans  &trans  &trans  &trans  &trans              &kp N       &kp M       &kp COMMA   &kp GRAVE   &kp BSLH

//                          |  ALT/ESC  | LEFT/BKSP | CTRL/ENT  |     | SHIFT/SPC | RIGHT/TAB |  CMD/DEL  |
                                            &trans  &trans  &trans  &trans  &trans  &trans  
                  >;
                };


                raise_layer {
                  bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |     1     |     2     |     3     |     4     |     5     |     |     6     |     7     |     8     |     9     |     0     |
      &kp C_BRI_DN  &kp C_BRI_UP  &kp N3      &kp N4      &kp N5            &kp C_PREV      &kp C_PP      &kp C_NEXT      &kp C_VOL_DN      &kp C_VOL_UP

//  |     Ae     |     Se     |     Oe     |     Ue     |     G     |     |     LEFT   |     DOWN   |     UP   |     RIGHT   |     '/"   |
      &trans  &trans  &trans  &trans  &trans              &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT    &kp SQT

//  |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |     ,     |     `/~   |     \/"|" |
      &trans  &trans  &trans  &trans  &trans              &kp N       &kp M       &kp COMMA   &kp GRAVE   &kp BSLH

//                          |  ALT/ESC  | LEFT/BKSP | CTRL/ENT  |     | SHIFT/SPC | RIGHT/TAB |  CMD/DEL  |
                                            &trans  &trans  &trans  &trans  &trans  &trans  
                                            >;
                };

                both_layer {
                  bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |     1     |     2     |     3     |     4     |     5     |     |     6     |     7     |     8     |     9     |     0     |
      &kp C_BRI_DN  &kp C_BRI_UP  &kp N3      &kp N4      &kp N5            &kp C_PREV      &kp C_PP      &kp C_NEXT      &kp C_VOL_DN      &kp C_VOL_UP

//  |     Ae     |     Se     |     Oe     |     Ue     |     G     |     |     LEFT   |     DOWN   |     UP   |     RIGHT   |     '/"   |
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3             &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT    &kp SQT

//  |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |     ,     |     `/~   |     \/"|" |
      &trans  &trans  &trans  &trans  &trans              &kp N       &kp M       &kp COMMA   &kp GRAVE   &kp BSLH

//                          |  ALT/ESC  | LEFT/BKSP | CTRL/ENT  |     | SHIFT/SPC | RIGHT/TAB |  CMD/DEL  |
                                            &trans  &trans  &trans  &trans  &trans  &trans  
                  >;
                };




                }

//                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
//                        bindings = <
//   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//                    &kp LGUI &mo LEFT &kp SPACE   &kp RET &mo RIGHT &kp RALT
//                        >;
//                };
//                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                        bindings = <
//   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                        >;
//                };

//               raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                        bindings = <
//   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
//   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
//   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
//                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//                        >;
//                };
//        };
};
